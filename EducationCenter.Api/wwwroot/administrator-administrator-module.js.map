{"version":3,"sources":["webpack:///./src/app/administrator/administrator-routing.module.ts","webpack:///./src/app/administrator/administrator.module.ts","webpack:///./src/app/administrator/components/admin-addedit/admin-addedit.component.html","webpack:///./src/app/administrator/components/admin-addedit/admin-addedit.component.scss","webpack:///./src/app/administrator/components/admin-addedit/admin-addedit.component.ts","webpack:///./src/app/administrator/components/administrator-list/administrator-list.component.html","webpack:///./src/app/administrator/components/administrator-list/administrator-list.component.scss","webpack:///./src/app/administrator/components/administrator-list/administrator-list.component.ts","webpack:///./src/app/administrator/services/administrator.service.ts"],"names":[],"mappings":"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","file":"administrator-administrator-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdministratorListComponent } from './components/administrator-list/administrator-list.component';\r\nimport { AdminAddeditComponent } from './components/admin-addedit/admin-addedit.component';\r\nimport { AdminGuard } from '../shared/guards/admin.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdministratorListComponent,\r\n    canActivate: [AdminGuard]\r\n  },\r\n  {\r\n    path: 'addedit/:id',\r\n    component: AdminAddeditComponent,\r\n    canActivate: [AdminGuard]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n  })\r\n  export class AdministratorRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdministratorListComponent } from './components/administrator-list/administrator-list.component';\nimport { AdministratorRoutingModule } from './administrator-routing.module';\nimport { MaterialDesignModule } from '../shared/material-design/material-design.module';\nimport { AdminAddeditComponent } from './components/admin-addedit/admin-addedit.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AdministratorListComponent, AdminAddeditComponent],\n  imports: [\n    CommonModule,\n    AdministratorRoutingModule,\n    MaterialDesignModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AdministratorModule { }\n","module.exports = \"<div id=\\\"spinnerWrapper\\\">\\n    <mat-spinner *ngIf=\\\"!hideSpinner\\\"></mat-spinner>\\n  </div>\\n<div class=\\\"grid-container\\\" *ngIf=\\\"hideSpinner\\\">\\n\\n    <mat-card class=\\\"mat-elevation-z3\\\">\\n      <div style=\\\"margin-bottom:15px;\\\">\\n        <h3 style=\\\"display:inline;\\\"> {{title}}</h3>\\n        <button mat-button class=\\\"back-btn\\\" [routerLink]=\\\"['/administrator']\\\">Back</button>\\n      </div>\\n    </mat-card>\\n\\n    <mat-horizontal-stepper  #stepper class=\\\"mat-elevation-z3\\\" *ngIf=\\\"!isEdit\\\">\\n        <mat-step [stepControl]=\\\"basicInfoFormGroup\\\">\\n          <form [formGroup]=\\\"basicInfoFormGroup\\\">\\n            <ng-template matStepLabel>Basic info</ng-template>\\n            <mat-form-field class=\\\"field\\\">\\n              <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\n              <mat-error *ngIf=\\\"f1.firstName.errors?.required\\\"> First name is required</mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\n              <mat-error *ngIf=\\\"f1.lastName.errors?.required\\\">Last Name is required</mat-error>\\n            </mat-form-field><br>\\n            <mat-form-field class=\\\"field\\\">\\n              <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n              <mat-error *ngIf=\\\"f1.email.errors?.email\\\"> Please enter valid email address</mat-error>\\n              <mat-error *ngIf=\\\"f1.email.errors?.required\\\"> Email is required</mat-error>\\n\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input type=\\\"tel\\\" matInput placeholder=\\\"Telephone\\\" formControlName=\\\"phone\\\" required>\\n                <mat-error *ngIf=\\\"f1.phone.errors?.required\\\">Phone is required</mat-error>\\n              </mat-form-field>\\n\\n          <br>\\n\\n          <mat-form-field class=\\\"field\\\">\\n              <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" required>\\n              <mat-error *ngIf=\\\"f1.username.errors?.usernameInUse\\\"> Username is already exist!</mat-error>\\n              <mat-error *ngIf=\\\"f1.username.errors?.required\\\"> Username is required</mat-error>\\n\\n            </mat-form-field>\\n            <mat-form-field>\\n                <textarea matInput placeholder=\\\"AvatarURL\\\" formControlName=\\\"avatarUrl\\\" required></textarea>\\n                <mat-error *ngIf=\\\"f1.avatarUrl.errors?.required\\\"> AvatarURL is required</mat-error>\\n              </mat-form-field> <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://getavataaars.com/\\\">Generate Avatar</a>\\n            <br>\\n            <mat-form-field class=\\\"field\\\">\\n                <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\n                <mat-error *ngIf=\\\"f1.password.errors?.required\\\"> Paasword is required</mat-error>\\n                <mat-error *ngIf=\\\"f1.password.errors?.minlength\\\"> Must be at least 8 characters!</mat-error>\\n                <mat-error *ngIf=\\\"f1.password.errors?.hasNumber\\\">   Must contain at least 1 number!</mat-error>\\n                <mat-error *ngIf=\\\"f1.password.errors?.hasCapitalCase\\\"> Must contain at least 1 in Capital Case!</mat-error>\\n                <mat-error *ngIf=\\\"f1.password.errors?.hasSmallCase\\\">  Must contain at least 1 Letter in Small Case!</mat-error>\\n\\n\\n              </mat-form-field>\\n\\n              <mat-form-field>\\n                  <input matInput type=\\\"password\\\" placeholder=\\\"Confrim password\\\" formControlName=\\\"confirmPassword\\\" required>\\n                  <mat-error *ngIf=\\\"f1.confirmPassword.errors?.required\\\"> Password is required</mat-error>\\n                  <mat-error *ngIf=\\\"f1.confirmPassword.errors?.NoPassswordMatch\\\">   Password do not match</mat-error>\\n\\n                </mat-form-field>\\n                <br>\\n                <br>\\n            <br>\\n            <br>\\n            <div>\\n              <button mat-button matStepperNext class=\\\"next-btn\\\">Next</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n\\n\\n        <mat-step>\\n          <ng-template matStepLabel>Done</ng-template>\\n          <div class=\\\"finalStep\\\" style=\\\"display: inline-block; width:100%;margin-bottom:20px;\\\">\\n            <div style=\\\"float: left; ;margin-right:70px;\\\">\\n                <p><b>Administrator: </b> {{this.basicInfoFormGroup.value.firstName + ' ' + this.basicInfoFormGroup.value.lastName}} </p>\\n                <p><b>Phone: </b> {{this.basicInfoFormGroup.value.phone }} </p>\\n                <p><b>Email: </b> {{this.basicInfoFormGroup.value.email }} </p>\\n\\n                <p><b>Username: </b> {{this.basicInfoFormGroup.value.username }} </p>\\n            </div>\\n\\n\\n\\n          </div>\\n          <div>\\n            <button mat-button matStepperPrevious class=\\\"bck-btn\\\">Back</button>\\n\\n            <button mat-raised-button cdkFocusInitial color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">\\n              Save\\n            </button>\\n          </div>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n\\n\\n      <mat-horizontal-stepper  #stepper class=\\\"mat-elevation-z3\\\" *ngIf=\\\"isEdit\\\">\\n        <mat-step [stepControl]=\\\"editForm\\\">\\n          <form [formGroup]=\\\"editForm\\\">\\n            <ng-template matStepLabel>Basic info</ng-template>\\n            <mat-form-field class=\\\"field\\\">\\n              <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\n              <mat-error *ngIf=\\\"f1.firstName.errors?.required\\\"> First name is required</mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\n              <mat-error *ngIf=\\\"f1.lastName.errors?.required\\\">Last Name is required</mat-error>\\n            </mat-form-field>\\n\\n            <mat-slide-toggle formControlName=\\\"active\\\"\\n            class=\\\"example-margin\\\"\\n\\n           >\\n          Active\\n        </mat-slide-toggle>\\n\\n            <br>\\n            <mat-form-field class=\\\"field\\\">\\n              <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n              <mat-error *ngIf=\\\"f1.email.errors?.email\\\"> Please enter valid email address</mat-error>\\n              <mat-error *ngIf=\\\"f1.email.errors?.required\\\"> Email is required</mat-error>\\n\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input type=\\\"tel\\\" matInput placeholder=\\\"Telephone\\\" formControlName=\\\"phone\\\" required>\\n                <mat-error *ngIf=\\\"f1.phone.errors?.required\\\">Phone is required</mat-error>\\n              </mat-form-field>\\n\\n          <br>\\n\\n\\n            <mat-form-field>\\n                <textarea matInput placeholder=\\\"AvatarURL\\\" formControlName=\\\"avatarUrl\\\" required></textarea>\\n                <mat-error *ngIf=\\\"f1.avatarUrl.errors?.required\\\"> AvatarURL is required</mat-error>\\n              </mat-form-field> <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://getavataaars.com/\\\">Generate Avatar</a>\\n            <br>\\n            <mat-form-field class=\\\"field\\\">\\n                <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\n                <mat-error *ngIf=\\\"f1.password.errors?.required\\\"> Paasword is required</mat-error>\\n                <mat-error *ngIf=\\\"f1.password.errors?.minlength\\\"> Must be at least 8 characters!</mat-error>\\n                <mat-error *ngIf=\\\"f1.password.errors?.hasNumber\\\">   Must contain at least 1 number!</mat-error>\\n                <mat-error *ngIf=\\\"f1.password.errors?.hasCapitalCase\\\"> Must contain at least 1 in Capital Case!</mat-error>\\n                <mat-error *ngIf=\\\"f1.password.errors?.hasSmallCase\\\">  Must contain at least 1 Letter in Small Case!</mat-error>\\n\\n\\n              </mat-form-field>\\n\\n              <mat-form-field>\\n                  <input matInput type=\\\"password\\\" placeholder=\\\"Confrim password\\\" formControlName=\\\"confirmPassword\\\" >\\n                  <mat-error *ngIf=\\\"f1.confirmPassword.errors?.NoPassswordMatch\\\">   Password do not match</mat-error>\\n\\n                </mat-form-field>\\n                <br>\\n            <br>\\n            <div>\\n              <button mat-button matStepperNext class=\\\"next-btn\\\">Next</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n\\n\\n        <mat-step>\\n          <ng-template matStepLabel>Done</ng-template>\\n          <div class=\\\"finalStep\\\" style=\\\"display: inline-block; width:100%;margin-bottom:20px;\\\">\\n            <div style=\\\"float: left; ;margin-right:70px;\\\">\\n                <p><b>Administrator: </b> {{this.editForm.value.firstName + ' ' + this.editForm.value.lastName}} </p>\\n                <p><b>Phone: </b> {{this.editForm.value.phone }} </p>\\n                <p><b>Email: </b> {{this.editForm.value.email }} </p>\\n            </div>\\n\\n\\n\\n          </div>\\n          <div>\\n            <button mat-button matStepperPrevious class=\\\"bck-btn\\\">Back</button>\\n\\n            <button mat-raised-button cdkFocusInitial color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">\\n              Save\\n            </button>\\n          </div>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n\\n </div>\\n\"","module.exports = \".grid-container {\\n  margin-top: 20px;\\n  margin-left: 10%;\\n  margin-right: 10%;\\n  margin-top: 1em;\\n  margin-bottom: 3em; }\\n\\n.grid-body {\\n  margin-top: 2px; }\\n\\n.back-btn {\\n  float: right;\\n  background-color: #009688;\\n  color: white; }\\n\\n.next-btn {\\n  background-color: #009688;\\n  color: white;\\n  margin-top: 5px; }\\n\\n.bck-btn {\\n  margin-top: 5px;\\n  color: #009688; }\\n\\n.field {\\n  margin-right: 5%;\\n  margin-bottom: 10px; }\\n\\na {\\n  text-decoration: none;\\n  color: #009688;\\n  margin-left: 20px;\\n  margin-bottom: 30px; }\\n\\n.example-margin {\\n  margin: 30px; }\\n\\n#spinnerWrapper {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW5pc3RyYXRvci9jb21wb25lbnRzL2FkbWluLWFkZGVkaXQvRDpcXEZJVFxcWmF2csWhbmlcXEVkdWNhdGlvbkNlbnRlclxcRWR1Y2F0aW9uQ2VudGVyLUJhY2tlbmRcXEVkdWNhdGlvbkNlbnRlci5BcGkvc3JjXFxhcHBcXGFkbWluaXN0cmF0b3JcXGNvbXBvbmVudHNcXGFkbWluLWFkZGVkaXRcXGFkbWluLWFkZGVkaXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2Ysa0JBQWtCLEVBQUE7O0FBSXBCO0VBQ0UsZUFBZSxFQUFBOztBQUdqQjtFQUNFLFlBQVk7RUFDWix5QkFBc0M7RUFDdEMsWUFBWSxFQUFBOztBQUdkO0VBQ0UseUJBQXNDO0VBQ3RDLFlBQVk7RUFDWixlQUFjLEVBQUE7O0FBR2hCO0VBQ0UsZUFBYztFQUNkLGNBQTJCLEVBQUE7O0FBRzdCO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQixFQUFBOztBQUlwQjtFQUNDLHFCQUFxQjtFQUNyQixjQUEyQjtFQUMzQixpQkFBaUI7RUFDakIsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBRUUsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FkbWluaXN0cmF0b3IvY29tcG9uZW50cy9hZG1pbi1hZGRlZGl0L2FkbWluLWFkZGVkaXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JpZC1jb250YWluZXIge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwJTtcclxuICBtYXJnaW4tcmlnaHQ6IDEwJTtcclxuICBtYXJnaW4tdG9wOiAxZW07XHJcbiAgbWFyZ2luLWJvdHRvbTogM2VtO1xyXG5cclxufVxyXG5cclxuLmdyaWQtYm9keXtcclxuICBtYXJnaW4tdG9wOiAycHg7XHJcbn1cclxuXHJcbi5iYWNrLWJ0bntcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAxNTAsIDEzNiwgMSk7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG5cclxufVxyXG4ubmV4dC1idG57XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAxNTAsIDEzNiwgMSk7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIG1hcmdpbi10b3A6NXB4O1xyXG59XHJcblxyXG4uYmNrLWJ0bntcclxuICBtYXJnaW4tdG9wOjVweDtcclxuICBjb2xvcjogcmdiYSgwLCAxNTAsIDEzNiwgMSk7XHJcbn1cclxuXHJcbi5maWVsZHtcclxuICBtYXJnaW4tcmlnaHQ6IDUlO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcblxyXG59XHJcblxyXG4gYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiByZ2JhKDAsIDE1MCwgMTM2LCAxKTtcclxuICBtYXJnaW4tbGVmdDogMjBweDtcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG5cclxufVxyXG4uZXhhbXBsZS1tYXJnaW4ge1xyXG4gIG1hcmdpbjogMzBweDtcclxufVxyXG5cclxuI3NwaW5uZXJXcmFwcGVyXHJcbntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatSnackBar } from \"@angular/material\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AdministratorService } from \"../../services/administrator.service\";\nimport { CustomValidators } from \"src/app/shared/helpers/custom-validators\";\nimport { AddAdmin } from \"src/app/shared/models/addAdministrator\";\nimport { UsernameValidator } from \"src/app/shared/helpers/username\";\nimport { EditAdmin } from \"src/app/shared/models/editAdmin\";\n\n@Component({\n  selector: \"app-admin-addedit\",\n  templateUrl: \"./admin-addedit.component.html\",\n  styleUrls: [\"./admin-addedit.component.scss\"]\n})\nexport class AdminAddeditComponent implements OnInit {\n  hideSpinner = false;\n  title = \"Add new administrator\";\n  errors: string[] = null;\n  isEdit: boolean = false;\n  adminId: number;\n  adminEdit: EditAdmin;\n\n  basicInfoFormGroup: FormGroup;\n  editForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    private route: ActivatedRoute,\n    private router: Router,\n    private adminService: AdministratorService,\n    public usernameValidator: UsernameValidator\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.adminId = +params.get(\"id\");\n    });\n\n    this.basicInfoFormGroup = this.fb.group(\n      {\n        firstName: [\"\", Validators.required],\n        lastName: [\"\", Validators.required],\n        email: [\n          null,\n          Validators.compose([Validators.email, Validators.required])\n        ],\n        phone: [\"\", Validators.required],\n        // tslint:disable-next-line:max-line-length\n        username: [\n          \"\",\n          Validators.compose([Validators.required]),\n          this.usernameValidator.checkUsername.bind(this.usernameValidator)\n        ],\n        avatarUrl: [\"\", Validators.required],\n        password: [\n          null,\n          Validators.compose([\n            Validators.required,\n            CustomValidators.patternValidator(/\\d/, { hasNumber: true }),\n            CustomValidators.patternValidator(/[A-Z]/, {\n              hasCapitalCase: true\n            }),\n            CustomValidators.patternValidator(/[a-z]/, { hasSmallCase: true }),\n            Validators.minLength(8)\n          ])\n        ],\n        confirmPassword: [null]\n      },\n      {\n        // check whether our password and confirm password match\n        validator: CustomValidators.passwordMatchValidator\n      }\n    );\n\n\n    this.editForm = this.fb.group(\n      {\n        firstName: [\"\", Validators.required],\n        lastName: [\"\", Validators.required],\n        email: [\n          null,\n          Validators.compose([Validators.email, Validators.required])\n        ],\n        phone: [\"\", Validators.required],\n        // tslint:disable-next-line:max-line-length\n\n        avatarUrl: [\"\", Validators.required],\n        password: [\n          null,\n          Validators.compose([\n            Validators.required,\n            CustomValidators.patternValidator(/\\d/, { hasNumber: true }),\n            CustomValidators.patternValidator(/[A-Z]/, {\n              hasCapitalCase: true\n            }),\n            CustomValidators.patternValidator(/[a-z]/, { hasSmallCase: true }),\n            Validators.minLength(8)\n          ])\n        ],\n        confirmPassword: [null],\n        active: [null],\n\n      },\n      {\n        // check whether our password and confirm password match\n        validator: CustomValidators.passwordMatchValidator\n      }\n    );\n\n    if (this.adminId !== 0) {\n      this.isEdit = true;\n      this.getAdmin();\n    } else {\n      this.toggleSpinner();\n\n    }\n  }\n  toggleSpinner() {\n    this.hideSpinner ? this.hideSpinner = false : this.hideSpinner = true;\n  }\n  getAdmin() {\n    this.adminService.getAdminById(this.adminId).subscribe(adm => {\n      this.toggleSpinner();\n      this.adminEdit = adm;\n      this.displayAdmin();\n    });\n  }\n  displayAdmin() {\n    if (this.basicInfoFormGroup) {\n      this.basicInfoFormGroup.reset();\n    }\n    this.title = \"Edit Administrator\";\n\n    this.editForm.patchValue({\n      firstName: this.adminEdit.firstName,\n      lastName: this.adminEdit.lastName,\n      email: this.adminEdit.email,\n      phone: this.adminEdit.phone,\n      password: this.adminEdit.password,\n      avatarUrl: this.adminEdit.avatarUrl,\n      active: this.adminEdit.active\n    });\n  }\n\n  get f1(): any {\n    return this.basicInfoFormGroup.controls;\n  }\n\n  onSubmit() {\n    if (this.adminId !== 0) {\n      this.updateAdmin();\n    } else {\n      this.addNewAdmin();\n    }\n  }\n  updateAdmin() {\n   this.adminEdit.firstName = this.editForm.value.firstName;\n   this.adminEdit.lastName = this.editForm.value.lastName;\n   this.adminEdit.email = this.editForm.value.email;\n   this.adminEdit.phone = this.editForm.value.phone;\n   this.adminEdit.password = this.editForm.value.password;\n   this.adminEdit.avatarUrl = this.editForm.value.avatarUrl;\n   this.adminEdit.active = this.editForm.value.active;\n\n\n   this.adminService.updateAdmin(this.adminEdit).subscribe(\n    () => {\n      this.toggleSpinner();\n      this.snackBar.open('Successfully updated Admin !', 'Close', {\n        duration: 3000\n      });\n      this.router.navigate(['/administrator']);\n    },\n    err => {\n      this.toggleSpinner();\n      this.snackBar.open(err, 'Close');\n      console.error(err);\n    }\n  );\n\n  }\n  addNewAdmin() {\n    const newAdmin: AddAdmin = {\n      firstName: this.basicInfoFormGroup.value.firstName,\n      lastName: this.basicInfoFormGroup.value.lastName,\n      email: this.basicInfoFormGroup.value.email,\n      phone: this.basicInfoFormGroup.value.phone,\n      username: this.basicInfoFormGroup.value.username,\n      password: this.basicInfoFormGroup.value.password,\n      avatarUrl: this.basicInfoFormGroup.value.avatarUrl\n    };\n\n    this.adminService.addAdmin(newAdmin).subscribe(\n      () => {\n        this.toggleSpinner();\n        this.openSnackBar(\"Success!\", \"New Administrator added!\");\n        this.router.navigate([\"/administrator\"]);\n      },\n      err => {\n        this.toggleSpinner();\n        this.openSnackBar(\"Error!\", err);\n        console.log(err);\n      }\n    );\n  }\n  openSnackBar(message: string, description: string): void {\n    this.snackBar.open(message, description, {\n      duration: 10000\n    });\n  }\n}\n","module.exports = \"<div id=\\\"spinnerWrapper\\\">\\n    <mat-spinner *ngIf=\\\"!hideSpinner\\\"></mat-spinner>\\n  </div>\\n<div class=\\\"table-container\\\" *ngIf=\\\"hideSpinner\\\">\\n    <mat-card class=\\\"mat-elevation-z3\\\">\\n        <div style=\\\"margin-bottom:15px;\\\">\\n          <h1 style=\\\"display:inline;\\\"> Administrators</h1>\\n          <button mat-button class=\\\"add-button\\\"  [routerLink]=\\\"['/administrator/addedit', 0]\\\">Add new</button>\\n        </div>\\n\\n              <mat-form-field>\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search admins\\\">\\n              </mat-form-field>\\n\\n            </mat-card>\\n\\n      <div class=\\\"table-body\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z3\\\">\\n            <ng-container matColumnDef=\\\"Firstname\\\">\\n              <th mat-header-cell *matHeaderCellDef class=\\\"table-cell center\\\"> First name </th>\\n              <td mat-cell *matCellDef=\\\"let admin\\\" class=\\\"table-cell center\\\"> {{admin.firstName}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Lastname\\\">\\n              <th mat-header-cell *matHeaderCellDef class=\\\"table-cell center\\\"> Last name </th>\\n              <td mat-cell *matCellDef=\\\"let admin\\\" class=\\\"table-cell center\\\"> {{admin.lastName}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Email\\\">\\n              <th mat-header-cell *matHeaderCellDef class=\\\"table-cell center\\\"> Email </th>\\n              <td mat-cell *matCellDef=\\\"let admin\\\" class=\\\"table-cell center\\\"> {{admin.email}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Phone\\\">\\n              <th mat-header-cell *matHeaderCellDef class=\\\"table-cell center\\\"> Phone </th>\\n              <td mat-cell *matCellDef=\\\"let admin\\\" class=\\\"table-cell center\\\"> {{admin.phone}}\\n\\n              </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"Username\\\">\\n                <th mat-header-cell *matHeaderCellDef class=\\\"table-cell center\\\"> Username </th>\\n                <td mat-cell *matCellDef=\\\"let admin\\\" class=\\\"table-cell center\\\"> {{admin.username}}\\n\\n                </td>\\n              </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Active\\\">\\n                <th mat-header-cell *matHeaderCellDef class=\\\"table-cell center\\\"> Active </th>\\n                <td mat-cell *matCellDef=\\\"let admin\\\" class=\\\"table-cell center\\\">{{admin.active}}\\n\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"Action\\\">\\n                  <th mat-header-cell *matHeaderCellDef class=\\\"table-cell center\\\"> Action </th>\\n                  <td mat-cell *matCellDef=\\\"let admin\\\" class=\\\"table-cell center\\\"> <button mat-mini-fab color=\\\"primary\\\"  [routerLink]=\\\"['/administrator/addedit', admin.id]\\\" >\\n                    <i class=\\\"material-icons\\\">edit</i>\\n                  </button>\\n\\n                  </td>\\n                </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          </table>\\n        </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 20px;\\n  width: 50%; }\\n\\n.table-container {\\n  margin-top: 20px;\\n  margin-left: 10%;\\n  margin-right: 10%;\\n  margin-top: 1em; }\\n\\n.table-header {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n  align-items: center; }\\n\\n.table-body {\\n  margin-top: 10px; }\\n\\n.table-cell {\\n  text-align: left;\\n  font-size: 18px; }\\n\\n.center {\\n  text-align: center; }\\n\\n.details-button {\\n  background-color: #26a69a;\\n  color: white; }\\n\\n.add-button {\\n  background-color: #009688;\\n  color: white;\\n  float: right; }\\n\\n.table-cell {\\n  text-align: left;\\n  font-size: 18px;\\n  padding: 0.5em; }\\n\\n#spinnerWrapper {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW5pc3RyYXRvci9jb21wb25lbnRzL2FkbWluaXN0cmF0b3ItbGlzdC9EOlxcRklUXFxaYXZyxaFuaVxcRWR1Y2F0aW9uQ2VudGVyXFxFZHVjYXRpb25DZW50ZXItQmFja2VuZFxcRWR1Y2F0aW9uQ2VudGVyLkFwaS9zcmNcXGFwcFxcYWRtaW5pc3RyYXRvclxcY29tcG9uZW50c1xcYWRtaW5pc3RyYXRvci1saXN0XFxhZG1pbmlzdHJhdG9yLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxlQUFlO0VBQ2YsVUFBVSxFQUFBOztBQUdaO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsZUFBZSxFQUFBOztBQUdqQjtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsV0FBVztFQUNYLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLGdCQUFnQjtFQUNoQixlQUFlLEVBQUE7O0FBRWpCO0VBQ0Usa0JBQWtCLEVBQUE7O0FBRXBCO0VBQ0UseUJBQXNDO0VBQ3RDLFlBQVksRUFBQTs7QUFFZDtFQUVFLHlCQUFzQztFQUN0QyxZQUFZO0VBQ1osWUFBWSxFQUFBOztBQUdkO0VBQ0UsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixjQUFjLEVBQUE7O0FBR2hCO0VBRUUsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FkbWluaXN0cmF0b3IvY29tcG9uZW50cy9hZG1pbmlzdHJhdG9yLWxpc3QvYWRtaW5pc3RyYXRvci1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICB3aWR0aDogNTAlO1xyXG59XHJcblxyXG4udGFibGUtY29udGFpbmVyIHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMCU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMCU7XHJcbiAgbWFyZ2luLXRvcDogMWVtO1xyXG59XHJcblxyXG4udGFibGUtaGVhZGVye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi50YWJsZS1ib2R5e1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi50YWJsZS1jZWxse1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG59XHJcbi5jZW50ZXJ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5kZXRhaWxzLWJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDM4LCAxNjYsIDE1NCwgMSk7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcbi5hZGQtYnV0dG9uIHtcclxuXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAxNTAsIDEzNiwgMSk7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGZsb2F0OiByaWdodDtcclxuXHJcbn1cclxuLnRhYmxlLWNlbGx7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgcGFkZGluZzogMC41ZW07XHJcbn1cclxuXHJcbiNzcGlubmVyV3JhcHBlclxyXG57XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Administrator } from \"src/app/shared/models/administrator\";\nimport { AdministratorService } from \"../../services/administrator.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { MatTableDataSource } from \"@angular/material\";\n\n@Component({\n  selector: \"app-administrator-list\",\n  templateUrl: \"./administrator-list.component.html\",\n  styleUrls: [\"./administrator-list.component.scss\"]\n})\nexport class AdministratorListComponent implements OnInit {\n  hideSpinner = false;\n  admins: Administrator[];\n  displayedColumns: string[] = [\n    \"Firstname\",\n    \"Lastname\",\n    \"Email\",\n    \"Phone\",\n    \"Username\",\n    \"Active\",\n    \"Action\"\n  ];\n  dataSource;\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  constructor(\n    private adminService: AdministratorService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.getAdmins();\n  }\n\n  toggleSpinner() {\n    this.hideSpinner ? this.hideSpinner = false : this.hideSpinner = true;\n  }\n  getAdmins(): void {\n    this.adminService.getAdministrators().subscribe(admin => {\n      this.toggleSpinner();\n      this.admins = admin;\n      this.dataSource = new MatTableDataSource(this.admins);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Administrator } from 'src/app/shared/models/administrator';\nimport { catchError } from 'rxjs/operators';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { AppConfig } from 'src/app/config/config';\nimport { throwError } from 'rxjs';\nimport { AddAdmin } from 'src/app/shared/models/addAdministrator';\nimport { EditAdmin } from 'src/app/shared/models/editAdmin';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdministratorService {\n\n  private pathAPI = this.config.setting[ 'PathAPI'] ;\n\n  constructor(private http: HttpClient, private config: AppConfig) { }\n\n  getAdministrators(){\n    return this.http.get<Administrator[]>(this.pathAPI + 'api/administrators').pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  getAdminById(id: number) {\n    return this.http.get<EditAdmin>(this.pathAPI + `api/administrator/${id}`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  addAdmin(adm: AddAdmin) {\n    return this.http.post<AddAdmin>(this.pathAPI + 'api/administrator', adm).pipe(\n     catchError(this.handleError)\n    );\n  }\n\n  updateAdmin(adm: EditAdmin) {\n    return this.http.put<EditAdmin>(this.pathAPI + 'api/administrator', adm).pipe(\n     catchError(this.handleError)\n    );\n  }\n\n\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n"],"sourceRoot":""}